{#
   Each field type is rendered by a template fragment, which is determined
   by the value of your getName() method and the suffix _widget.

   See http://symfony.com/doc/current/cookbook/form/create_custom_field_type.html#creating-a-template-for-the-field
#}

{% block datetimepicker_widget %}
    {% spaceless %}
        <div class="input-group date" data-toggle="datetimepicker">
            {{ block('datetime_widget') }}
            <span class="input-group-addon">
                <span class="fa fa-calendar"></span>
            </span>
        </div>
    {% endspaceless %}
{% endblock %}

{% block vich_file_widget %}
    {% spaceless %}
        <div class="vich-file">
            {{ form_widget(form.file) }}
            {% if form.delete is defined %}
                {{ form_row(form.delete) }}
            {% endif %}

            {% if download_uri is defined and download_uri %}
                <a href="{{ download_uri }}">{{ 'download'|trans({}, 'VichUploaderBundle') }}</a>
            {% endif %}
        </div>
    {% endspaceless %}
{% endblock %}

{% block vich_image_widget %}
    {% spaceless %}
        <div class="row">
            {% if download_uri is defined and download_uri %}
                <div class="col-md-2">
                    <a href="{{ download_uri }}"><img src="{{ download_uri }}" alt="" class="img-thumbnail" /></a>
                    {% if show_download_link and download_uri is defined and download_uri%}
                        <a href="{{ download_uri }}">{{ 'download'|trans({}, 'VichUploaderBundle') }}</a>
                    {% endif %}
                </div>
                <div class="col-md-10">
            {% else %}
                <div class="col-md-12">
            {% endif %}
                {{ form_widget(form.file) }}
                {% if form.delete is defined %}
                    {{ form_row(form.delete) }}
                {% endif %}

            </div>
        </div>
    {% endspaceless %}
{% endblock %}

{% block checkswitch_widget -%}
    {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' control-label')|trim}) -%}
    {% if label is empty -%}
        {%- if label_format is not empty -%}
            {% set label = label_format|replace({
                '%name%': name,
                '%id%': id,
            }) %}
        {%- else -%}
            {% set label = name|humanize %}
        {%- endif -%}
    {%- endif -%}
    <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>{{ translation_domain is same as(false) ? label : label|trans({}, translation_domain) }}</label>
    <div class="checkbox">
        <input type="checkbox" {{ block('widget_attributes') }}{% if value is defined %} value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %} />
    </div>
    <script type="text/javascript">
        $("#{{ id }}").bootstrapSwitch({onText:"{{ on_text }}",offText:"{{ off_text }}",onColor:"{{ on_color }}",offColor:"{{ off_color }}"});
    </script>
{%- endblock checkswitch_widget %}